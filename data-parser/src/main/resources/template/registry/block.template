import lombok.Getter;

import ink.reactor.dataparser.util.CopyOnWriteCollection;

@Getter
public final class Block {
    public static final char[] NONE_DROPS = new char[0];

    public static final CopyOnWriteCollection<Block> ALL = new CopyOnWriteCollection<>({ALL_FIELD});

    private final char id;
    private final float resistance;
    private final char[] drops;

    public Block(int id, double resistance, char[] drops) {
        this.id = (char)id;
        this.resistance = (short) (resistance >= 10000 ? Material.UNBREAKABLE : resistance);
        this.drops = drops;
    }

    public Block(int id, double resistance, int drop) {
        this(id, resistance, (drop == 0 ? NONE_DROPS : new char[] {(char)drop}));
    }

    private static Block add(final Block block) {
        ALL.add(block);
        return block;
    }

    public Material[] getMaterialDrops() {
        return Material.byIds(drops);
    }

    public boolean hasDrops() {
        return drops.length != 0;
    }

    @Override
    public int hashCode() {
        return id;
    }

    @Override
    public boolean equals(final Object object) {
        return object == this || (object instanceof Block block && block.id == this.id);
    }

    public static final Block {BLOCKS_FIELD};
}